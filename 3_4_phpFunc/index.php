<?php
// Задание 1: Определение простой функции и возвращаемые значения
// Инструкция:
// Создайте функцию  multiply , которая принимает два числа в качестве параметров,
// умножает их и возвращает результат.
function multiply(int $a, int $b) { 
    return $a * $b; 
}
echo multiply(3, 4), "\n"; // Ожидаемый результат: 12

// Задание 2: Область видимости переменных
// Инструкция:
// Создайте переменную  $globalVar  с числом 50 за пределами функции. Внутри функции
// sumGlobal  создайте локальную переменную  $localVar  со значением 100 и сложите ее с
// $globalVar . Выведите результат.
$globalVar = 50; 
 
function sumGlobal() { 
    global $globalVar; 
    $localVar = 100; 
    return $globalVar + $localVar; 
}
echo sumGlobal(), "\n"; // Ожидаемый результат: 150

// Задание 3: Рекурсия
// Инструкция:
// Напишите рекурсивную функцию  factorial , которая вычисляет факториал числа. Факториал
// числа  n  — это произведение всех чисел от 1 до  n .
function factorial($n) { 
    if ($n <= 1) { 
        return 1; 
    }
    //Создал переменную, чтобы в отладке понять, что происходит в рекурсии
    $tempFact = factorial($n - 1);
    return $n * $tempFact;
}
echo factorial(5), "\n"; // Ожидаемый результат: 120

// Задание 4: Анонимные функции
// Инструкция:
// Создайте анонимную функцию, которая принимает строку и выводит её в верхнем регистре.
// Передайте эту функцию в качестве аргумента для функции  array_map  для обработки
// массива строк.
$array = ["apple", "banana", "cherry"]; 
 
$result = array_map(function($value) { 
    return strtoupper($value); 
}, $array); 
print_r($result); // Ожидаемый результат: ["APPLE", "BANANA", "CHERRY"]

// Задание 5: Стрелочные функции
// Инструкция:
// Напишите стрелочную функцию, которая принимает два числа и возвращает их сумму.
$sum = fn(int $a, int $b) => $a + $b; 
 
echo $sum(3, 4), "\n"; // Ожидаемый результат: 7

// Задание 6: Замыкания / Closure
// Инструкция:
// Создайте функцию  counter , которая возвращает замыкание. Замыкание должно увеличивать
// счётчик на 1 при каждом вызове.
function counter() { 
    $count = 0; 
    return function() use (&$count) { 
        $count++; 
        return $count; 
    }; 
} 
 
$myCounter = counter(); 
 
echo $myCounter(), "\n"; // Ожидаемый результат: 1
echo $myCounter(), "\n"; // Ожидаемый результат: 2

// Задание 7: Генераторы и оператор yield
// Инструкция:
// Напишите генератор, который возвращает числа от 1 до 5 с помощью оператора  yield .
// Подсказка:
function generateNumbers() { 
    for ($i = 1; $i <= 5; $i++) { 
        yield $i; 
    } 
} 
 
$generator = generateNumbers(); 
 
foreach ($generator as $number) { 
    echo $number . " "; // Ожидаемый результат: 1 2 3 4 5 
}
echo "\n";

// Задание 8: Использование встроенных функций
// Инструкция:
// Используя встроенные функции PHP, найдите минимальное и максимальное значения в
// массиве чисел.
$array = [3, 7, 2, 8, 4, 10, 1]; 
 
$minValue = min($array); 
$maxValue = max($array); 
 
echo "Минимум: " . $minValue . "\n"; // Ожидаемый результат: Минимум: 1
echo "Максимум: " . $maxValue . "\n"; // Ожидаемый результат: Максимум: 10